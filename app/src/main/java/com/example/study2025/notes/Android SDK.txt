Android SDK

- SDK stands for Software Development Kit.
- So the Android SDK is a toolbox full of everything you need to build an Android app.
- What does the SDK actually include?
    - APIs ‚Äì Functions that let you talk to Android (e.g., open the camera, send a notification).
    - Libraries ‚Äì Prewritten code you can reuse (like RecyclerView, Room, etc.).
    - Build tools ‚Äì To compile your code and turn it into an app.
    - Emulators ‚Äì So you can test apps on virtual phones without needing a real device.


Custom SDK (As an external library (reusable + sharable))
- You can make your own custom SDK and use it in your main app
- A custom SDK is just a collection of code (like functions, classes, utilities, etc.) that you bundle
together so other apps or modules can reuse it without reinventing the wheel.
- Let‚Äôs say you built a super slick analytics tracker (MyAwesomeTracker) that:
  - Tracks screen views
  - Sends custom events
  - Works with Firebase, Mixpanel, etc.
  You don‚Äôt want to copy-paste this code into every app or module, right? So you bundle it as a custom SDK

- Why build a custom SDK?
    - Share reusable code between multiple apps
    - Hide internal implementation details (only expose APIs)
    - Maintain it independently (versioning, updates)
    - Plug and play across teams


How to connect your custom SDK to the main app?
- In the main app
implementation(project(":myawesometracker"))


Yes, you can totally create your own SDK.
It‚Äôs just a fancy way of saying ‚ÄúHey, I made a reusable library that other apps can easily plug in and use.‚Äù

It‚Äôs cleaner, more scalable, and you look like an absolute dev boss for doing it. üòé